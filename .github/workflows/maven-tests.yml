name: Maven Selenium Tests

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Checkout code
      - name: Checkout code
        uses: actions/checkout@v4

      # Setup JDK
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      # Install Google Chrome
      - name: Install Google Chrome
        run: |
          wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb
          sudo apt install -y ./google-chrome-stable_current_amd64.deb

      # Install Docker Compose
      - name: Install Docker Compose
        run: |
          sudo curl -L "https://github.com/docker/compose/releases/download/v2.23.0/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose
          docker-compose --version

      # Debug: list docker folder
      - name: List files in docker
        run: ls -R docker

      # Start Docker Compose
      - name: Start Docker Compose
        run: |
          docker-compose -f docker/docker-compose.yaml up -d
          docker ps

      # Wait for app to be ready using service name
      # Wait for app to be ready using localhost
      - name: Wait for app to be ready
        run: |
          for i in {1..60}; do
            if curl -s http://localhost:3000 > /dev/null; then
              echo " App is up!"
              exit 0
            fi
            echo " Waiting for app..."
            sleep 5
          done
          
          echo " App did not start in time. Showing container logs..."
          echo "=== Logs: adminjs-app ==="
          docker logs adminjs-app || true
          echo "=== Logs: postgres_db ==="
          docker logs postgres_db || true
          echo "=== Logs: mysql_db ==="
          docker logs mysql_db || true
          echo "=== Logs: mongo_db ==="
          docker logs mongo_db || true
          
          exit 1
      

      # Run Maven Selenium tests
      - name: Run Selenium tests
        run: mvn -B clean test -Dbase.url=http://localhost:3000

      # Stop Docker after tests
      - name: Stop Docker Compose
        if: always()
        run: docker-compose -f docker/docker-compose.yaml down
